/* tslint:disable */
/* eslint-disable */
/**
 * Simple Kanban API
 * A simple kanban API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CardColumn } from './CardColumn';
import {
    CardColumnFromJSON,
    CardColumnFromJSONTyped,
    CardColumnToJSON,
    CardColumnToJSONTyped,
} from './CardColumn';
import type { LabelColor } from './LabelColor';
import {
    LabelColorFromJSON,
    LabelColorFromJSONTyped,
    LabelColorToJSON,
    LabelColorToJSONTyped,
} from './LabelColor';

/**
 * 
 * @export
 * @interface CardInCreate
 */
export interface CardInCreate {
    /**
     * 
     * @type {string}
     * @memberof CardInCreate
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof CardInCreate
     */
    description?: string;
    /**
     * 
     * @type {CardColumn}
     * @memberof CardInCreate
     */
    column?: CardColumn;
    /**
     * 
     * @type {Array<LabelColor>}
     * @memberof CardInCreate
     */
    labels?: Array<LabelColor>;
}



/**
 * Check if a given object implements the CardInCreate interface.
 */
export function instanceOfCardInCreate(value: object): value is CardInCreate {
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function CardInCreateFromJSON(json: any): CardInCreate {
    return CardInCreateFromJSONTyped(json, false);
}

export function CardInCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): CardInCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'column': json['column'] == null ? undefined : CardColumnFromJSON(json['column']),
        'labels': json['labels'] == null ? undefined : ((json['labels'] as Array<any>).map(LabelColorFromJSON)),
    };
}

export function CardInCreateToJSON(json: any): CardInCreate {
    return CardInCreateToJSONTyped(json, false);
}

export function CardInCreateToJSONTyped(value?: CardInCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'column': CardColumnToJSON(value['column']),
        'labels': value['labels'] == null ? undefined : ((value['labels'] as Array<any>).map(LabelColorToJSON)),
    };
}

